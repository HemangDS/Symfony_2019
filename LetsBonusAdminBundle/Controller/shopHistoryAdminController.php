<?php

namespace iFlair\LetsBonusAdminBundle\Controller;

use Sonata\AdminBundle\Controller\CRUDController;
use iFlair\LetsBonusAdminBundle\Entity\shopHistory;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use iFlair\LetsBonusAdminBundle\Entity\Variation;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;
use iFlair\LetsBonusAdminBundle\Entity\Slug;
use iFlair\LetsBonusAdminBundle\Slug\Constants;

class shopHistoryAdminController extends CRUDController
{
    public function deleteAction($id)
    {
        $em = $this->getDoctrine()->getManager();
        $shopHistoryVariationRepository = $em->getRepository('iFlairLetsBonusAdminBundle:Variation');
        $shopHistoryVariation = $shopHistoryVariationRepository->findBy(array('shopHistory' => $id));
        if (count($shopHistoryVariation) > 0) {
            foreach ($shopHistoryVariation as $variation) {
                $em->remove($variation);
                $em->flush();
            }
        }
        $this->addFlash('sonata_flash_success', 'Item has been deleted successfully');

        return parent::deleteAction($id); // TODO: Change the autogenerated stub
    }

    public function cloneAction()
    {
        $request = $this->getRequest();
        // the key used to lookup the template
        $templateKey = 'edit';
        $object = $this->admin->getNewInstance();
        $object_data = $this->admin->getSubject();
        $this->admin->setSubject($object);

      
        $form = $this->admin->getForm();
        $form->setData($object_data);

   
        $view = $form->createView();

        // set the theme for the current Admin Form
        $this->get('twig')->getExtension('form')->renderer->setTheme($view, $this->admin->getFormTheme());

        return $this->render($this->admin->getTemplate($templateKey), array(
            'action' => 'create',
            'form'   => $view,
            'object' => $object,
        ), null);
        
    }

      /**
     * (non-PHPdoc).
     *
     * @see Sonata\AdminBundle\Controller.CRUDController::createAction()
     */
     public function createAction()
    {

        $request = $this->getRequest();
        
        $shopId = $request->request->get('shopId');

        // the key used to lookup the template
        $templateKey = 'edit';

        if (false === $this->admin->isGranted('CREATE')) {
            throw new AccessDeniedException();
        }

        $object = $this->admin->getNewInstance();

        $this->admin->setSubject($object);

        /** @var $form \Symfony\Component\Form\Form */
        $em = $this->getDoctrine()->getManager();
        $shop = $em->getRepository('iFlairLetsBonusAdminBundle:Shop');
        $shopObj= $shop->findOneBy(array('id' => $shopId));

        $object->setShop($shopObj);
       
        $form = $this->admin->getForm();
        $form->setData($object);

        if ($this->getRestMethod() == 'POST') {
            
            $form->submit($request);

            $isFormValid = $form->isValid();
          
            // persist if the form was valid and if in preview mode the preview was approved
            if ($isFormValid && (!$this->isInPreviewMode() || $this->isPreviewApproved())) {
                if (false === $this->admin->isGranted('CREATE', $object)) {
                    throw new AccessDeniedException();
                }

                try {

                    $shopHistory = $em->getRepository('iFlairLetsBonusAdminBundle:shopHistory')->findBy(array('shop' => $object->getShop()));
                    
                    foreach ($shopHistory as $shopHistorykey => $shopHistoryvalue) {
                       
                       $shopHistorySlug = $em->getRepository('iFlairLetsBonusAdminBundle:Slug')->findOneBy(array('categoryId' => $shopHistoryvalue->getId(), 'categoryType' => Constants::SHOP_IDENTIFIER));

                        if($shopHistorySlug)
                        {
                           $em->remove($shopHistorySlug);
                           $em->flush();
                        }
                    }

                    $id = '';
                    $db_parameter_name = '';
                    $post_parameter_name = '';


                    $slug_response = $this->get('app.category_url_slugger')->urlVerification($id, $object->getShop()->getUrl(), 'Slug', 'slugName', Constants::SHOP_IDENTIFIER, $db_parameter_name, $post_parameter_name);


                        $object->setAdministrator($form->getData()->getAdministrator()->getId());
                        $object = $this->admin->create($object);
                        $slug = new Slug();
                        $slug->setCategoryType(Constants::SHOP_IDENTIFIER);
                        $slug->setSlugName($slug_response);
                        if($object->getStartDate()->format('Y-m-d H:i:s')>date('Y-m-d H:i:s')){
                            $now = new \DateTime('now');
                            $histories = $em->getRepository('iFlairLetsBonusAdminBundle:shopHistory')
                                            ->createQueryBuilder('c')
                                            ->select('c.id,c.startDate')
                                            ->where('c.shop = :status')
                                            ->andWhere('c.startDate <= :now')
                                            ->setParameter('status', $object->getShop())
                                            ->setParameter('now', $now)
                                            ->orderBy('c.startDate', 'DESC')
                                            ->getQuery()
                                            ->getResult();
                            if(count($histories)>0){
                                $slug->setCategoryId($histories[0]['id']);
                            }else{
                                $slug->setCategoryId($object->getId());
                            }
                        }else{
                            $slug->setCategoryId($object->getId());
                        }
                        $em = $this->getDoctrine()->getManager();
                        $em->persist($slug);
                        $em->flush();
             
                    if ($this->isXmlHttpRequest()) {
                        return $this->renderJson(array(
                            'result'   => 'ok',
                            'objectId' => $this->admin->getNormalizedIdentifier($object),
                        ), 200, array());
                    }

                    $this->addFlash(
                        'sonata_flash_success',
                        $this->admin->trans(
                            'flash_create_success',
                            array('%name%' => $this->escapeHtml($this->admin->toString($object))),
                            'SonataAdminBundle'
                        )
                    );

                    // redirect to edit mode
                       return new RedirectResponse("/secure_area/admin/iflair/letsbonusadmin/shop/".$object->getShop()."/edit");

                } catch (ModelManagerException $e) {
                    $this->logModelManagerException($e);

                    $isFormValid = false;
                }
            }

            // show an error message if the form failed validation
            if (!$isFormValid) {
                if (!$this->isXmlHttpRequest()) {
                    $this->addFlash(
                        'sonata_flash_error',
                        $this->admin->trans(
                            'flash_create_error',
                            array('%name%' => $this->escapeHtml($this->admin->toString($object))),
                            'SonataAdminBundle'
                        )
                    );
                }
            } elseif ($this->isPreviewRequested()) {
                // pick the preview template if the form was valid and preview was requested
                $templateKey = 'preview';
                $this->admin->getShow();
            }
        }
       // $this->addFlash('sonata_flash_success', 'Selected item cloned successfully');

        $view = $form->createView();

        // set the theme for the current Admin Form
        $this->get('twig')->getExtension('form')->renderer->setTheme($view, $this->admin->getFormTheme());

        return $this->render($this->admin->getTemplate($templateKey), array(
            'action' => 'create',
            'form'   => $view,
            'object' => $object,
        ), null);
    }

     /**
     * (non-PHPdoc).
     *
     * @see Sonata\AdminBundle\Controller.CRUDController::editAction()
     */
    public function editAction($id = null)
    {
        $request = $this->getRequest();

        // the key used to lookup the template
        $templateKey = 'edit';

        $id = $request->get($this->admin->getIdParameter());
        $object = $this->admin->getObject($id);

        if (!$object) {
            throw new NotFoundHttpException(sprintf('unable to find the object with id : %s', $id));
        }

        if (false === $this->admin->isGranted('EDIT', $object)) {
            throw new AccessDeniedException();
        }

        $this->admin->setSubject($object);

        /** @var $form \Symfony\Component\Form\Form */
       
        $form = $this->admin->getForm();
        $form->setData($object);
        $form->handleRequest($request);

        if ($request->isMethod('POST')) {
            $isFormValid = $form->isValid();

            // persist if the form was valid and if in preview mode the preview was approved
            if ($isFormValid && (!$this->isInPreviewMode() || $this->isPreviewApproved())) {
                try {
                    $object = $this->admin->create($object);

                    if ($this->isXmlHttpRequest()) {
                        return $this->renderJson(array(
                            'result'   => 'ok',
                            'objectId' => $this->admin->getNormalizedIdentifier($object),
                        ), 200, array());
                    }

                    $this->addFlash(
                        'sonata_flash_success',
                        $this->admin->trans(
                            'flash_create_success',
                            array('%name%' => $this->escapeHtml($this->admin->toString($object))),
                            'SonataAdminBundle'
                        )
                    );

                    // redirect to edit mode
                return new RedirectResponse("/secure_area/admin/iflair/letsbonusadmin/shop/".$object->getShop()->getId()."/edit");
                } catch (ModelManagerException $e) {
                    $this->logModelManagerException($e);

                    $isFormValid = false;
                }
            }

            // show an error message if the form failed validation
            if (!$isFormValid) {
                if (!$this->isXmlHttpRequest()) {
                    $this->addFlash(
                        'sonata_flash_error',
                        $this->admin->trans(
                            'flash_create_error',
                            array('%name%' => $this->escapeHtml($this->admin->toString($object))),
                            'SonataAdminBundle'
                        )
                    );
                }
            } elseif ($this->isPreviewRequested()) {
                // pick the preview template if the form was valid and preview was requested
                $templateKey = 'preview';
                $this->admin->getShow();
            }
        }

        $view = $form->createView();

        // set the theme for the current Admin Form
        $this->get('twig')->getExtension('form')->renderer->setTheme($view, $this->admin->getFormTheme());

        return $this->render($this->admin->getTemplate($templateKey), array(
            'action' => 'edit',
            'form'   => $view,
            'object' => $object,
        ), null);
    }
}
